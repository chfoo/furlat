===============================
FURLAT: Find URL Archiving Tool
===============================

Furlat is a tool and library that discovers URL shortcodes generated by URL shorteners.


Quick Start
===========

Installation
++++++++++++

You will need:

* Python 3.2 or greater
* Firefox
* Selenium (Python 3 Package)

You can install the dependent Python packages using ``pip``. For example on Ubuntu::

    pip3 install selenium


Running
+++++++

You can run the package as a script::

    python3 -m furlat bit.ly --verbose

Use the ``--help`` to see details about arguments.

Results are currently stored into a text file. For example, if you run bit.ly, a folder called ``bitly`` will be created with the text files inside the folder. The text files contain the discovered URLs.


Library
+++++++

The library is not yet stable, but you can read the ``__main__.py`` file to get a overview of how it works.


About
=====

The goal of Furlat is to find valid shortcodes as much as possible, without brute-force discovery, using 3rd party sources such as search engines and microblogs. 


Links
+++++

* Homepage: https://github.com/chfoo/furlat

.. * Questions?: https://answers.launchpad.net/furlat

.. * Bugs?: https://github.com/chfoo/furlat/issues

.. * PyPI: https://pypi.python.org/pypi/furlat/

* Chat: irc://irc.efnet.org/archiveteam-bs (I'll be on #archiveteam-bs on EFnet)


Testing
+++++++

The unit tests can be run with ``nosetests``::

    ``nosetests3``


Roadmap
+++++++

This software is currently in **experimental** state.


What's Available
----------------

* Launching a real web browser.
* Searching through Google, Yahoo, and Bing.
* Random keyword search term generation using word lists and MediaWiki page title dump files.


What's To-Do
------------

* Searching Twitter and Identica
* Searching archived grabs, such as those on the Internet Archive, of microblogs
* Nicer result output options
* Configurable options such as fetch rate and number of jobs run concurrently
* Travis CI setup
* PyPI and other websites setup
* Inline documentation
* Launching a fake web browser.

